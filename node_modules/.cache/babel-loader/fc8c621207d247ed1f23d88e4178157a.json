{"ast":null,"code":"var _jsxFileName = \"/Users/mariannademenko/Documents/lessons/react-assignment-1-Mdemenko1/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Info from './Info';\nimport Board from './Board';\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.newGame = () => {\n      this.setState({\n        isPlaying: false,\n        start: false,\n        turn: 0,\n        playerX: \"\",\n        playerO: \"\",\n        reset: false\n      });\n    };\n\n    this.changeReset = stateReset => {\n      this.setState({\n        reset: stateReset\n      });\n    };\n\n    this.changeStart = () => {\n      this.setState({\n        start: true\n      });\n    };\n\n    this.handleStartGame = () => {\n      if (Math.random() > 0.5) {\n        this.setState({\n          turn: 1\n        });\n      } else {\n        this.setState({\n          turn: 2\n        });\n      }\n\n      this.setState({\n        startGame: true,\n        start: false\n      }); // console.log(this.state.turn)\n\n      this.changeIsPlaying();\n    };\n\n    this.changeTurn = turn => {\n      if (turn === 1) this.setState({\n        turn: 2\n      });else this.setState({\n        turn: 1\n      });\n    };\n\n    this.changeIsPlaying = () => {\n      this.setState({\n        isPlaying: true\n      });\n    };\n\n    this.handleSetPlayerName = (playerX_name, playerO_name) => {\n      this.setState({\n        playerX_name,\n        playerX_id: 1,\n        playerO_name,\n        playerO_id: 2\n      });\n    };\n\n    this.state = {\n      start: false,\n      startGame: false,\n      turn: 0,\n      playerX: \"\",\n      playerO: \"\",\n      reset: false,\n      isPlaying: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"TIC TAC TOE\",\n      start: this.state.start,\n      changeStart: this.changeStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Info, {\n      start: this.state.start,\n      startGame: this.handleStartGame,\n      setPlayerName: this.handleSetPlayerName.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      start: this.state.start,\n      startGame: this.state.startGame,\n      playerX_name: this.state.playerX_name,\n      playerO_name: this.state.playerO_name,\n      isPlaying: this.state.isPlaying,\n      turn: this.state.turn,\n      changeTurn: this.changeTurn,\n      reset: this.state.reset,\n      changeReset: this.changeReset,\n      newGame: this.newGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/mariannademenko/Documents/lessons/react-assignment-1-Mdemenko1/src/components/App.js"],"names":["React","Component","Header","Info","Board","Game","constructor","newGame","setState","isPlaying","start","turn","playerX","playerO","reset","changeReset","stateReset","changeStart","handleStartGame","Math","random","startGame","changeIsPlaying","changeTurn","handleSetPlayerName","playerX_name","playerO_name","playerX_id","playerO_id","state","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header'\nimport Info from './Info'\nimport Board from './Board'\n\n\nclass Game extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      start: false,\n      startGame: false,\n      turn: 0,\n      playerX: \"\",\n      playerO: \"\",\n      reset: false,\n      isPlaying: false\n    }\n  }\n\n  newGame = () => {\n    this.setState({\n      isPlaying: false,\n      start: false,\n      turn: 0,\n      playerX: \"\",\n      playerO: \"\",\n      reset: false\n    })\n  }\n\n  changeReset = (stateReset) => {\n    this.setState({\n      reset: stateReset\n    });\n  }\n\n  changeStart = () => {\n    this.setState({\n      start: true\n    })\n  }\n\n  handleStartGame = () => {\n\n    if (Math.random() > 0.5) {\n      this.setState({\n        turn: 1\n      })\n\n    }\n    else {\n      this.setState({\n        turn: 2\n      })\n\n    }\n\n    this.setState({\n      startGame: true,\n      start: false,\n    })\n    // console.log(this.state.turn)\n    this.changeIsPlaying();\n  }\n  changeTurn = (turn) => {\n    if (turn === 1)\n      this.setState({\n        turn: 2\n      })\n    else\n      this.setState({\n        turn: 1\n      })\n  }\n\n  changeIsPlaying = () => {\n    this.setState({\n      isPlaying: true\n    });\n  }\n\n  handleSetPlayerName = (playerX_name, playerO_name) => {\n    this.setState({\n      playerX_name,\n      playerX_id: 1,\n      playerO_name,\n      playerO_id: 2,\n\n    })\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Header\n          title=\"TIC TAC TOE\"\n          start={this.state.start}\n          changeStart={this.changeStart}\n        />\n        <Info\n          start={this.state.start}\n          startGame={this.handleStartGame}\n          setPlayerName={this.handleSetPlayerName.bind(this)}\n        />\n        <Board\n          start={this.state.start}\n          startGame={this.state.startGame}\n          playerX_name={this.state.playerX_name}\n          playerO_name={this.state.playerO_name}\n          isPlaying={this.state.isPlaying}\n          turn={this.state.turn}\n          changeTurn={this.changeTurn}\n          reset={this.state.reset}\n          changeReset={this.changeReset}\n          newGame={this.newGame} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}