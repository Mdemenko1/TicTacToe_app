{"ast":null,"code":"var _jsxFileName = \"/Users/mariannademenko/Documents/lessons/react-assignment-1-Mdemenko1/src/components/Board.js\";\nimport React, { Component } from 'react';\nimport X from '../images/1.png';\nimport O from '../images/0.png';\nimport Cell from './Cell';\n\nclass Board extends Component {\n  constructor() {\n    super();\n\n    this.createBoard = () => {\n      let board = [];\n      let counter = 0;\n\n      for (var x = 0; x < 3; x++) {\n        let row = [];\n\n        for (var y = 0; y < 3; y++) {\n          row.push( /*#__PURE__*/React.createElement(Cell, {\n            key: counter,\n            turn: this.props.turn,\n            changeTurn: this.props.changeTurn,\n            id: counter,\n            updateBoard: this.updateBoard,\n            reset: this.props.reset,\n            changeReset: this.props.changeReset,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 18\n            }\n          }));\n          counter++;\n        }\n\n        board.push( /*#__PURE__*/React.createElement(\"div\", {\n          key: x,\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 18\n          }\n        }, row));\n      }\n\n      return board;\n    };\n\n    this.updateBoard = (index, turn) => {\n      var currentBoard = this.state.board;\n      currentBoard[index] = turn;\n      this.setState({\n        board: currentBoard\n      });\n      console.log(this.state.board);\n      this.isWinner(currentBoard, turn);\n    };\n\n    this.resetBoard = () => {\n      this.setState({\n        board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        winner: false\n      });\n    };\n\n    this.isWinner = (currentBoard, turn) => {\n      var winner = false;\n      var winninOptions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (var i = 0; i < winninOptions.length; i++) {\n        if (currentBoard[winninOptions[i][0]] == turn && currentBoard[winninOptions[i][1]] == turn && currentBoard[winninOptions[i][2]] == turn) {\n          winner = true;\n          this.setState({\n            winner: turn\n          });\n          break;\n        }\n      }\n    };\n\n    this.winner = () => {\n      if (this.state.winner == 1) return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"niceFont\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      }, \" \", this.props.playerX_name, \" Wins! with \", /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: X,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 77\n        }\n      }));else return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"niceFont\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }\n      }, \" \", this.props.playerO_name, \" Wins! with \", /*#__PURE__*/React.createElement(\"img\", {\n        className: \"icon\",\n        src: O,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 77\n        }\n      }));\n    };\n\n    this.handleReset = () => {\n      if (!this.state.winner) this.props.changeReset(true);\n      this.resetBoard();\n    };\n\n    this.newGame = () => {\n      this.props.newGame();\n      this.resetBoard();\n    };\n\n    this.showTurn = () => {\n      let showTurnContent;\n\n      if (this.props.turn === 1) {\n        showTurnContent = this.props.playerX_name;\n      } else {\n        showTurnContent = this.props.playerO_name;\n      }\n\n      return showTurnContent;\n    };\n\n    this.state = {\n      board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      winner: false\n    };\n  } // evaluateBoard = () => {\n  //   let cells = document.querySelectorAll(\".cell\")\n  //   console.log(cells)\n  // }\n\n\n  render() {\n    if (this.props.startGame && this.props.isPlaying && this.state.winner == false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"together\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: X,\n        alt: \"Icon1\",\n        className: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 16\n        }\n      }), this.props.playerX_name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"niceFont\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, \"Now Playing :\", this.showTurn()), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: O,\n        alt: \"Icon0\",\n        className: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 16\n        }\n      }), this.props.playerO_name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, \" \", this.createBoard()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"together\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-dark niceFont\",\n        onClick: this.newGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, \" New Game \"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-dark niceFont\",\n        onClick: this.handleReset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, \" Reset \")));\n    } else {\n      if (this.state.winner) return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-info\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, this.winner()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"together\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-dark niceFont\",\n        onClick: this.newGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }, \" New Game \"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-dark niceFont\",\n        onClick: this.handleReset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, \" Reset \")));else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }\n        });\n      }\n    }\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/mariannademenko/Documents/lessons/react-assignment-1-Mdemenko1/src/components/Board.js"],"names":["React","Component","X","O","Cell","Board","constructor","createBoard","board","counter","x","row","y","push","props","turn","changeTurn","updateBoard","reset","changeReset","index","currentBoard","state","setState","console","log","isWinner","resetBoard","winner","winninOptions","i","length","playerX_name","playerO_name","handleReset","newGame","showTurn","showTurnContent","render","startGame","isPlaying"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport X from '../images/1.png';\nimport O from '../images/0.png';\nimport Cell from './Cell';\n\n\nclass Board extends Component {\n  constructor() {\n    super();\n    this.state = {\n      board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      winner: false\n\n    }\n  }\n\n  // evaluateBoard = () => {\n  //   let cells = document.querySelectorAll(\".cell\")\n  //   console.log(cells)\n  // }\n\n  createBoard = () => {\n    let board = [];\n\n    let counter = 0;\n    for (var x = 0; x < 3; x++) {\n      let row = []\n      for (var y = 0; y < 3; y++) {\n        row.push(<Cell\n          key={counter}\n          turn={this.props.turn}\n          changeTurn={this.props.changeTurn}\n          id={counter}\n          updateBoard={this.updateBoard}\n          reset={this.props.reset}\n          changeReset={this.props.changeReset}\n        />)\n        counter++;\n      }\n      board.push(<div key={x} className=\"row\">{row}</div>)\n\n    }\n    return board\n\n  }\n  updateBoard = (index, turn) => {\n    var currentBoard = this.state.board;\n    currentBoard[index] = turn;\n    this.setState({\n      board: currentBoard\n    })\n    console.log(this.state.board)\n    this.isWinner(currentBoard, turn);\n  }\n  resetBoard = () => {\n    this.setState({\n      board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      winner: false\n    });\n  }\n\n  isWinner = (currentBoard, turn) => {\n    var winner = false;\n    var winninOptions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (var i = 0; i < winninOptions.length; i++) {\n      if (currentBoard[winninOptions[i][0]] == turn && currentBoard[winninOptions[i][1]] == turn && currentBoard[winninOptions[i][2]] == turn) {\n        winner = true;\n        this.setState({\n          winner: turn\n        });\n        break;\n      }\n    }\n  }\n\n  winner = () => {\n    if (this.state.winner == 1)\n      return <h1 className=\"niceFont\"> {this.props.playerX_name} Wins! with <img className=\"icon\" src={X} /></h1>\n    else\n      return <h1 className=\"niceFont\"> {this.props.playerO_name} Wins! with <img className=\"icon\" src={O} /></h1>\n  }\n\n  handleReset = () => {\n    if (!this.state.winner)\n      this.props.changeReset(true);\n    this.resetBoard();\n  }\n\n  newGame = () => {\n    this.props.newGame();\n    this.resetBoard();\n  }\n\n\n\n  showTurn = () => {\n    let showTurnContent;\n    if (this.props.turn === 1) {\n      showTurnContent = this.props.playerX_name\n    }\n    else {\n      showTurnContent = this.props.playerO_name\n    }\n    return showTurnContent\n  }\n\n  render() {\n    if (this.props.startGame && this.props.isPlaying && this.state.winner == false) {\n\n      return (\n        <div>\n          <div className=\"together\">\n            <p><img src={X} alt=\"Icon1\" className=\"icon\" />{this.props.playerX_name}</p>\n            <p className=\"niceFont\">Now Playing :{this.showTurn()}</p>\n            <p><img src={O} alt=\"Icon0\" className=\"icon\" />{this.props.playerO_name}</p>\n          </div>\n          <div className=\"board\"> {this.createBoard()}\n          </div>\n          <div className=\"together\">\n            <button className=\"btn btn-dark niceFont\" onClick={this.newGame}> New Game </button>\n            <button className=\"btn btn-dark niceFont\" onClick={this.handleReset}> Reset </button>\n          </div>\n\n        </div>)\n    }\n    else {\n      if (this.state.winner)\n        return (\n          <div className=\"alert alert-info\" role=\"alert\">\n            <div className=\"center\">\n              {this.winner()}\n            </div>\n            <div className=\"together\">\n              <button className=\"btn btn-dark niceFont\" onClick={this.newGame}> New Game </button>\n              <button className=\"btn btn-dark niceFont\" onClick={this.handleReset}> Reset </button>\n            </div>\n          </div>\n        );\n      else {\n        return (<div className=\"center\">\n\n        </div>);\n      }\n    }\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}